version: '3'

volumes:
  backup-cache:
  owncloud:
  pg-owncloud:
  redis:
  tiddly:
  gogs:
  pg-gogs:

services:
  owncloud:
    image: owncloud/server:10.0.10
    depends_on:
      - pg-owncloud
      - redis
    links:
      - "pg-owncloud:db"
      - redis
    ports:
      - "7000:8080"
    volumes:
      - owncloud:/mnt/data
    environment:
      - OWNCLOUD_DOMAIN=cloud.adolfosilva.org
      - OWNCLOUD_DB_TYPE=pgsql
      - OWNCLOUD_DB_NAME=owncloud
      - OWNCLOUD_DB_USERNAME=${OWNCLOUD_PG_USERNAME}
      - OWNCLOUD_DB_PASSWORD=${OWNCLOUD_PG_PASSWORD}
      - OWNCLOUD_DB_HOST=db
      - OWNCLOUD_ADMIN_USERNAME=${OWNCLOUD_ADMIN_USERNAME}
      - OWNCLOUD_ADMIN_PASSWORD=${OWNCLOUD_ADMIN_PASSWORD}
      - OWNCLOUD_REDIS_ENABLED=true
      - OWNCLOUD_REDIS_HOST=redis
    labels:
      - traefik.enable=true
      - traefik.backend=owncloud
      - traefik.frontend.rule=Host:cloud.adolfosilva.org
      - traefik.frontend.entryPoints=https,http
      - traefik.port=7000

  pg-owncloud:
    image: postgres:9.6.10-alpine
    environment:
      - POSTGRES_USER=${OWNCLOUD_PG_USERNAME}
      - POSTGRES_PASSWORD=${OWNCLOUD_PG_PASSWORD}
    volumes:
      - pg-owncloud:/var/lib/postgresql/data
    labels:
      - traefik.enable=false
      - traefik.backend=pg-owncloud

  redis:
    image: redis:5.0.0-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis:/data

  tiddlywiki:
    image: mazzolino/tiddlywiki
    ports:
      - "8000:8080"
    volumes:
      - tiddly:/var/lib/tiddlywiki
    environment:
      - USERNAME=${TIDDLY_USERNAME}
      - PASSWORD=${TIDDLY_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.backend=tiddlywiki
      - traefik.frontend.rule=Host:wiki.adolfosilva.org
      - traefik.frontend.entryPoints=https,http
      - traefik.port=8000

  gogs:
    image: gogs/gogs
    depends_on:
      - pg-gogs
    links:
      - "pg-gogs:db"
    ports:
      - "10022:22"
      - "3000:3000"
    volumes:
      - gogs:/data
    labels:
      - traefik.enable=true
      - traefik.backend=gogs
      - traefik.frontend.rule=Host:code.adolfosilva.org
      - traefik.frontend.entryPoints=https,http
      - traefik.port=3000
    environment:
      - ENABLE_GZIP=true

  pg-gogs:
    image: postgres:alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${GOGS_PG_USERNAME}
      - POSTGRES_PASSWORD=${GOGS_PG_PASSWORD}
      - POSTGRES_DB=gogs
    volumes:
      - pg-gogs:/var/lib/postgresql/data
    labels:
      - traefik.enable=false
      - traefik.backend=pg-gogs

  traefik:
    build: traefik
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.backend=traefik
      - traefik.frontend.rule=Host:traefik.adolfosilva.org
      - traefik.frontend.entryPoints=http,https
      - traefik.port=8080
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  backups:
    container_name: volumerize
    image: blacklabelops/volumerize
    restart: unless-stopped
    environment:
        - VOLUMERIZE_SOURCE=/source
        - VOLUMERIZE_CONTAINERS=edu_tiddlywiki_1
        - VOLUMERIZE_TARGET=dpbx:///Apps/Volumerize
        - DPBX_ACCESS_TOKEN=${DROPBOX_ACCESS_TOKEN}
        - VOLUMERIZE_JOBBER_TIME=0 0 */12 * * *
        - VOLUMERIZE_FULL_IF_OLDER_THAN=7D
        - JOB_NAME2=RemoveOldBackups
        - JOB_COMMAND2=/etc/volumerize/remove-older-than 7D --force
        - JOB_TIME2=0 0 * * * *
    volumes:
        - tiddly:/source/tiddly:ro
        - backup-cache:/volumerize-cache
        - /var/run/docker.sock:/var/run/docker.sock
